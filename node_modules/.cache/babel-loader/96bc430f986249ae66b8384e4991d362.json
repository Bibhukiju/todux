{"ast":null,"code":"var _jsxFileName = \"K:\\\\react\\\\todux\\\\src\\\\components\\\\TodoListItems.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { deleteTodo, iscompleted } from \"../action/todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoListItems = ({\n  priority\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => {\n      return todo.priority === priority ? /*#__PURE__*/_jsxDEV(StyledItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: todo.isDone ? \"completed\" : \"\",\n          children: \"|    \" + todo.title + \"  |\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.preventDefault();\n              console.log(todo.id);\n              dispatch(iscompleted(todo.id));\n            },\n            children: todo.isDone ? \"Not done\" : \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.preventDefault();\n              console.log(todo.id);\n              dispatch(deleteTodo(todo.id));\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : \"\";\n    })\n  }, void 0, false);\n};\n\n_s(TodoListItems, \"jix1NHdDDHL9RTq12K6AZ161n9o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TodoListItems;\nconst StyledItem = styled.div`\n  display: flex;\n  justify-content: space-around;\n  border: 1px solid black;\n  align-items: center;\n  padding: 5px;\n  background-color: #f3f3f3;\n  transition: all 1s ease-in;\n  h4 {\n    font-size: 1.5rem;\n  }\n  .completed {\n    text-decoration: line-through;\n    text-decoration-color: red;\n  }\n`;\n_c2 = StyledItem;\nexport default TodoListItems;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoListItems\");\n$RefreshReg$(_c2, \"StyledItem\");","map":{"version":3,"sources":["K:/react/todux/src/components/TodoListItems.js"],"names":["useSelector","useDispatch","styled","deleteTodo","iscompleted","TodoListItems","priority","dispatch","todos","state","map","todo","isDone","title","e","preventDefault","console","log","id","StyledItem","div"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,sBACE;AAAA,cACGA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACnB,aAAOA,IAAI,CAACL,QAAL,KAAkBA,QAAlB,gBACL,QAAC,UAAD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEK,IAAI,CAACC,MAAL,GAAc,WAAd,GAA4B,EAA3C;AAAA,oBACG,UAAUD,IAAI,CAACE,KAAf,GAAuB;AAD1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,kCACE;AACE,YAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACC,cAAF;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,EAAjB;AACAX,cAAAA,QAAQ,CAACH,WAAW,CAACO,IAAI,CAACO,EAAN,CAAZ,CAAR;AACD,aALH;AAAA,sBAOGP,IAAI,CAACC,MAAL,GAAc,UAAd,GAA2B;AAP9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AACE,YAAA,OAAO,EAAGE,CAAD,IAAO;AACdA,cAAAA,CAAC,CAACC,cAAF;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,EAAjB;AACAX,cAAAA,QAAQ,CAACJ,UAAU,CAACQ,IAAI,CAACO,EAAN,CAAX,CAAR;AACD,aALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAAiBP,IAAI,CAACO,EAAtB;AAAA;AAAA;AAAA;AAAA,cADK,GA2BL,EA3BF;AA6BD,KA9BA;AADH,mBADF;AAmCD,CAvCD;;GAAMb,a;UACaJ,W,EAEHD,W;;;KAHVK,a;AAwCN,MAAMc,UAAU,GAAGjB,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMD,U;AAiBN,eAAed,aAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { deleteTodo, iscompleted } from \"../action/todos\";\r\n\r\nconst TodoListItems = ({ priority }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todos = useSelector((state) => state.todos);\r\n  return (\r\n    <>\r\n      {todos.map((todo) => {\r\n        return todo.priority === priority ? (\r\n          <StyledItem key={todo.id}>\r\n            <h4 className={todo.isDone ? \"completed\" : \"\"}>\r\n              {\"|    \" + todo.title + \"  |\"}\r\n            </h4>\r\n            <div>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(todo.id);\r\n                  dispatch(iscompleted(todo.id));\r\n                }}\r\n              >\r\n                {todo.isDone ? \"Not done\" : \"Done\"}\r\n              </button>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(todo.id);\r\n                  dispatch(deleteTodo(todo.id));\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </StyledItem>\r\n        ) : (\r\n          \"\"\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nconst StyledItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border: 1px solid black;\r\n  align-items: center;\r\n  padding: 5px;\r\n  background-color: #f3f3f3;\r\n  transition: all 1s ease-in;\r\n  h4 {\r\n    font-size: 1.5rem;\r\n  }\r\n  .completed {\r\n    text-decoration: line-through;\r\n    text-decoration-color: red;\r\n  }\r\n`;\r\n\r\nexport default TodoListItems;\r\n"]},"metadata":{},"sourceType":"module"}